'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Route = require('react-router/Route');

var _Route2 = _interopRequireDefault(_Route);

var _matchPath = require('react-router/matchPath');

var _matchPath2 = _interopRequireDefault(_matchPath);

var _matchRoutes2 = require('./helpers/matchRoutes');

var _matchRoutes3 = _interopRequireDefault(_matchRoutes2);

var _getDisplayName = require('./helpers/getDisplayName');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

var _makeInjectable = require('./helpers/makeInjectable');

var _makeInjectable2 = _interopRequireDefault(_makeInjectable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var wrapSwitch = function wrapSwitch(Wrapper) {
  var WrappedSwitch = function WrappedSwitch(_ref, _ref2) {
    var router = _ref2.router;

    var routes = _ref.routes,
        location = _ref.location,
        getKey = _ref.getKey,
        wrapperProps = _objectWithoutProperties(_ref, ['routes', 'location', 'getKey']);

    var parent = router.route;

    var loc = location || parent.location;

    var _matchRoutes = (0, _matchRoutes3.default)(routes, loc.pathname, parent),
        match = _matchRoutes.match,
        route = _matchRoutes.route;

    var routeProps = match ? (0, _makeInjectable2.default)(route) : route;
    return _react2.default.createElement(
      Wrapper,
      wrapperProps,
      match ? _react2.default.createElement(_Route2.default, _extends({
        key: getKey(match, route, loc)
      }, routeProps, {
        location: loc,
        computedMatch: match
      })) : null
    );
  };

  WrappedSwitch.propTypes = {
    routes: _propTypes2.default.array.isRequired,
    location: _propTypes2.default.shape({
      pathname: _propTypes2.default.string.isRequired
    }),
    getKey: _propTypes2.default.func
  };

  WrappedSwitch.defaultProps = {
    getKey: function getKey(match) {
      return match && match.url;
    }
  };

  WrappedSwitch.contextTypes = {
    router: _propTypes2.default.shape({
      route: _propTypes2.default.shape({
        location: _propTypes2.default.object.isRequired
      }).isRequired
    }).isRequired
  };

  WrappedSwitch.displayName = 'wrapSwitch(' + (0, _getDisplayName2.default)(Wrapper) + ')';

  return WrappedSwitch;
};

exports.default = wrapSwitch;